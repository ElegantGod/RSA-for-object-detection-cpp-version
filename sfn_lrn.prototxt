name: "ResNet-50"

input: "data"
input_dim: 1
input_dim: 3
input_dim: 16
input_dim: 16



# ------------------------ conv1 -----------------------------
layer {
    bottom: "data"
    top: "conv1"
    name: "conv1"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 7
        pad: 3
        stride: 2
    }
    param {
        lr_mult: 0
        decay_mult: 0
    }
}



layer {
    top: "conv1"
    bottom: "conv1"
    name: "conv1_relu"
    type: "ReLU"
}

layer {
    bottom: "conv1"
    top: "pool1"
    name: "pool1"
    type: "Pooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}

layer {
    bottom: "pool1"
    top: "res2a_branch1"
    name: "res2a_branch1"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
    }
    param {
        lr_mult: 0
        decay_mult: 0
    }
}


layer {
    bottom: "pool1"
    top: "res2a_branch2a"
    name: "res2a_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 1
        pad: 0
        stride: 1
    }
    param {
        lr_mult: 0
        decay_mult: 0
    }
}



layer {
    top: "res2a_branch2a"
    bottom: "res2a_branch2a"
    name: "res2a_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res2a_branch2a"
    top: "res2a_branch2b"
    name: "res2a_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 3
        pad: 1
        stride: 1
    }
    param {
        lr_mult: 0
        decay_mult: 0
    }
}


layer {
    top: "res2a_branch2b"
    bottom: "res2a_branch2b"
    name: "res2a_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res2a_branch2b"
    top: "res2a_branch2c"
    name: "res2a_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
    }
    param {
        lr_mult: 0
        decay_mult: 0
    }
}



layer {
    bottom: "res2a_branch1"
    bottom: "res2a_branch2c"
    top: "res2a"
    name: "res2a"
    type: "Eltwise"
}

layer {
    bottom: "res2a"
    top: "res2a"
    name: "res2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res2a"
    top: "pool2"
    name: "pool2"
    type: "Pooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}


layer {
    bottom: "pool2"
    top: "res2b_branch2a"
    name: "res2b_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 1
        pad: 0
        stride: 1
    }
    param {
        lr_mult: 0
        decay_mult: 0
    }
}



layer {
    top: "res2b_branch2a"
    bottom: "res2b_branch2a"
    name: "res2b_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res2b_branch2a"
    top: "res2b_branch2b"
    name: "res2b_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 3
        pad: 1
        stride: 1
    }
    param {
        lr_mult: 0
        decay_mult: 0
    }
}



layer {
    top: "res2b_branch2b"
    bottom: "res2b_branch2b"
    name: "res2b_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res2b_branch2b"
    top: "res2b_branch2c"
    name: "res2b_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
    }
    param {
        lr_mult: 0
        decay_mult: 0
    }
}



layer {
    bottom: "pool2"
    bottom: "res2b_branch2c"
    top: "res2b"
    name: "res2b"
    type: "Eltwise"
}

layer {
    bottom: "res2b"
    top: "res2b"
    name: "res2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res2b"
    top: "res2c_branch2a"
    name: "res2c_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 1
        pad: 0
        stride: 1
    }
    param {
        lr_mult: 1.0
    }
}



layer {
    top: "res2c_branch2a"
    bottom: "res2c_branch2a"
    name: "res2c_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res2c_branch2a"
    top: "res2c_branch2b"
    name: "res2c_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 3
        pad: 1
        stride: 1
    }
    param {
        lr_mult: 1.0
    }
}


layer {
    top: "res2c_branch2b"
    bottom: "res2c_branch2b"
    name: "res2c_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res2c_branch2b"
    top: "res2c_branch2c"
    name: "res2c_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
    }
    param {
        lr_mult: 1.0
    }
}



layer {
    bottom: "res2b"
    bottom: "res2c_branch2c"
    top: "res2c"
    name: "res2c"
    type: "Eltwise"
}

layer {
    bottom: "res2c"
    top: "res2c"
    name: "res2c_relu"
    type: "ReLU"
}

layer {
    bottom: "res2c"
    top: "res3a_branch1"
    name: "res3a_branch1"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 1
        pad: 0
        stride: 2
    }
    param {
        lr_mult: 1.0
    }
}


layer {
    bottom: "res2c"
    top: "res3a_branch2a"
    name: "res3a_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 1
        pad: 0
        stride: 2
    }
    param {
        lr_mult: 1.0
    }
}



layer {
    top: "res3a_branch2a"
    bottom: "res3a_branch2a"
    name: "res3a_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res3a_branch2a"
    top: "res3a_branch2b"
    name: "res3a_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 3
        pad: 1
        stride: 1
    }
    param {
        lr_mult: 1.0
    }
}



layer {
    top: "res3a_branch2b"
    bottom: "res3a_branch2b"
    name: "res3a_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res3a_branch2b"
    top: "res3a_branch2c"
    name: "res3a_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 1
        pad: 0
        stride: 1
    }
    param {
        lr_mult: 1.0
    }
}



layer {
    bottom: "res3a_branch1"
    bottom: "res3a_branch2c"
    top: "res3a"
    name: "res3a"
    type: "Eltwise"
}

layer {
    bottom: "res3a"
    top: "res3a"
    name: "res3a_relu"
    type: "ReLU"
}

layer {
    bottom: "res3a"
    top: "res3b1_branch2a"
    name: "res3b1_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 1
        pad: 0
        stride: 1
    }
    param {
        lr_mult: 1.0
    }
}



layer {
    top: "res3b1_branch2a"
    bottom: "res3b1_branch2a"
    name: "res3b1_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res3b1_branch2a"
    top: "res3b1_branch2b"
    name: "res3b1_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 3
        pad: 1
        stride: 1
    }
    param {
        lr_mult: 1.0
    }
}



layer {
    top: "res3b1_branch2b"
    bottom: "res3b1_branch2b"
    name: "res3b1_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res3b1_branch2b"
    top: "res3b1_branch2c"
    name: "res3b1_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 1
        pad: 0
        stride: 1
    }
    param {
        lr_mult: 1.0
    }
}


layer {
    bottom: "res3a"
    bottom: "res3b1_branch2c"
    top: "res3b1"
    name: "res3b1"
    type: "Eltwise"
}

layer {
    bottom: "res3b1"
    top: "res3b1"
    name: "res3b1_relu"
    type: "ReLU"
}

layer {
    bottom: "res3b1"
    top: "res3b2_branch2a"
    name: "res3b2_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 1
        pad: 0
        stride: 1
    }
    param {
        lr_mult: 1.0
    }
}


layer {
    top: "res3b2_branch2a"
    bottom: "res3b2_branch2a"
    name: "res3b2_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res3b2_branch2a"
    top: "res3b2_branch2b"
    name: "res3b2_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 3
        pad: 1
        stride: 1
    }
    param {
        lr_mult: 1.0
    }
}


layer {
    top: "res3b2_branch2b"
    bottom: "res3b2_branch2b"
    name: "res3b2_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res3b2_branch2b"
    top: "res3b2_branch2c"
    name: "res3b2_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 1
        pad: 0
        stride: 1
    }
    param {
        lr_mult: 1.0
    }
}



layer {
    bottom: "res3b1"
    bottom: "res3b2_branch2c"
    top: "res3b2"
    name: "res3b2"
    type: "Eltwise"
}

layer {
    bottom: "res3b2"
    top: "res3b2"
    name: "res3b2_relu"
    type: "ReLU"
}

layer {
    bottom: "res3b2"
    top: "res3b3_branch2a"
    name: "res3b3_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 1
        pad: 0
        stride: 1
    }
    param {
        lr_mult: 1.0
    }
}


layer {
    top: "res3b3_branch2a"
    bottom: "res3b3_branch2a"
    name: "res3b3_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res3b3_branch2a"
    top: "res3b3_branch2b"
    name: "res3b3_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 3
        pad: 1
        stride: 1
    }
    param {
        lr_mult: 1.0
    }
}



layer {
    top: "res3b3_branch2b"
    bottom: "res3b3_branch2b"
    name: "res3b3_branch2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res3b3_branch2b"
    top: "res3b3_branch2c"
    name: "res3b3_branch2c"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 1
        pad: 0
        stride: 1
    }
    param {
        lr_mult: 1.0
    }
}


layer {
    bottom: "res3b2"
    bottom: "res3b3_branch2c"
    top: "res3b3"
    name: "res3b3"
    type: "Eltwise"
}

layer {
    bottom: "res3b3"
    top: "res3b3"
    name: "res3b3_relu"
    type: "ReLU"
}
#------------------- feature layer --------------

layer {
    bottom: "res3b3"
    top: "conv_new"
    name: "conv_new"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
    param {
        lr_mult: 1.0
    }
    param {
        lr_mult: 2.0
    }
}

layer {
    bottom: "conv_new"
    top: "conv_new"
    name: "conv_new_relu"
    type: "ReLU"
}

#------------------- predict layer --------------

layer {
    bottom: "conv_new"
    top: "rpn_cls"
    name: "rpn_cls"
    type: "Convolution"
    convolution_param {
        num_output: 1
        kernel_size: 1
        pad: 0
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
    param {
        lr_mult: 1.0
    }
    param {
        lr_mult: 2.0
    }
}

layer {
    bottom: "conv_new"
    top: "rpn_reg"
    name: "rpn_reg"
    type: "Convolution"
    convolution_param {
        num_output: 10
        kernel_size: 1
        pad: 0
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
    param {
        lr_mult: 1.0
    }
    param {
        lr_mult: 2.0
    }
}